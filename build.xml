<?xml version="1.0" encoding="utf-8" ?>
<project name="GwtScheduler" default="build" basedir=".">

	<!-- main project props -->
	<property environment="env" />
  <property name="version" value="0.2" />
	<property name="src.dir" value="src" />
	<property name="test.dir" value="test" />
	<property name="experimental.dir" value="experimental" />

	<property name="lib.dir" value="lib" />
	<property name="war.dir" value="war" />
	<property name="reports.dir" value="reports" />


	<property name="GWT_HOME" value="/home/mlesikov/development/gwt-2.5.0/" />


	<!-- main props -->
	<!--<echo message="       OS: ${env.OS}" />-->
	<!--<echo message="JAVA HOME: ${env.JAVA_HOME}" />-->
	<echo message=" GWT HOME: ${GWT_HOME}" />

	<!-- checks if GWT_HOME is defined -->
	<target name="validate-gwt-home" unless="GWT_HOME">
		<fail message="Please define the GWT_HOME environment property" />
	</target>

	<!-- main class path -->
	<path id="project.class.path">
		<pathelement location="${src.dir}" />
		<pathelement location="${experimental.dir}" />
		<pathelement location="${war.dir}/WEB-INF/classes" />
		<pathelement location="${GWT_HOME}/gwt-user.jar" />
		<pathelement location="${GWT_HOME}/gwt-dev.jar" />
		<!-- Add any additional non-server libs (such as JUnit) -->
		<fileset dir="${war.dir}/WEB-INF/lib" includes="**/*.jar" />
		<fileset dir="${lib.dir}" includes="**/*.jar" />
	</path>

	<!-- test class path -->
	<path id="project.test.class.path">
		<path refid="project.class.path" />
		<pathelement location="${test.dir}" />
	</path>

	<!-- copy required libs -->
	<target name="copy-libs" depends="validate-gwt-home" description="Copy libs to WEB-INF/lib">
		<mkdir dir="${war.dir}/WEB-INF/lib" />
		<copy todir="${war.dir}/WEB-INF/lib" file="${GWT_HOME}/gwt-servlet.jar" />
		<!-- Add any additional server libs that need to be copied -->
	</target>

	<!-- compiles all srcs -->
	<target name="compile" depends="copy-libs" description="Compile java source">
		<mkdir dir="${war.dir}/WEB-INF/classes" />
		<javac includes="**" encoding="utf-8" destdir="${war.dir}/WEB-INF/classes" source="1.5" target="1.5" nowarn="true" debug="true" debuglevel="lines,vars,source">
			<classpath refid="project.class.path" />
			<src path="${src.dir}" />
			<src path="${experimental.dir}" />
			<src path="${test.dir}" />
		</javac>
	</target>

	<!-- can makeDraggable additional arguments like -logLevel INFO or -style PRETTY -->
	<target name="gwtc" depends="compile" description="GWT compile to JavaScript">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath refid="project.class.path" />
			<!-- makeDraggable jvmarg -Xss16M or similar if you see a StackOverflowError -->
			<jvmarg value="-Xmx512M" />
			<arg value="gwtscheduler.ViewportTests" />
		</java>
	</target>

	<!-- runs hosted mode browser -->
	<target name="viewportTests" depends="compile" description="Run hosted mode">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.HostedMode">
			<classpath refid="project.class.path" />
			<jvmarg value="-Xmx512M" />
			<arg value="-startupUrl" />
			<arg value="ViewportTests.html" />
			<arg value="gwtscheduler.ViewportTests" />
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
		</java>
	</target>

	<!-- runs all junit tests -->
	<target name="test-all" depends="clean,compile" description="Runs all junit test">
		<junit printsummary="yes" haltonfailure="false">
			<jvmarg value="-Xmx512M" />
			<classpath refid="project.test.class.path" />
			<batchtest fork="yes" todir="${reports.dir}">
				<fileset dir="${test.dir}" includes="**/*Benchmark.java,**/*Tests.java" />
			</batchtest>
		</junit>

		<!-- generates reports -->
		<junitreport todir="${reports.dir}">
			<fileset dir="${reports.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${reports.dir}" />
		</junitreport>
	</target>

	<!-- launches benchmark viewer (windows only) -->
	<target name="benchmark-viewer" description="Launches the benchmark viewer">
		<exec executable="cmd">
			<arg value="/c" />
			<arg value="benchmarkViewer" />
		</exec>
	</target>

	<!-- builds the project -->
	<target name="build" depends="gwtc" description="Build this project" />


	<!--&lt;!&ndash; copy required css resources &ndash;&gt;-->
	<!--<target name="copy-css-res" description="Copy css resources to WEB-INF/classes/css">-->
		<!--<mkdir dir="${war.dir}/WEB-INF/classes/css" />-->

		<!--<copy todir="${war.dir}/WEB-INF/classes/css">-->
            <!--<fileset dir = "${war.dir}/css/">-->
                    <!--<include name="**/*"/>-->
            <!--</fileset>-->
            <!--</copy>-->
	<!--</target>,copy-css-res-->
	
  <!-- Builds jar file -->
  <target name="jar" depends="clean,compile"
          description="Assembles a distributable jar">

    <jar jarfile="gwt-scheduler-${version}.jar" index="true">
    <!--<jar jarfile="../evoadm/lib/gwt-scheduler-${version}.jar" index="true">-->

      <fileset dir="${war.dir}/WEB-INF/classes/">
        <include name="**/*"/>
        <exclude name="**/tests/**"/>   
      </fileset>

      <fileset dir="${src.dir}/">
        <include name="**/*"/>        
        <exclude name="WEB-INF/**"/>
      </fileset>
    </jar>

  </target>

	<!-- cleans the project -->
	<target name="clean" description="Cleans this project">
		<delete dir="war/WEB-INF/classes" failonerror="false" />
		<delete dir="war/viewporttests" failonerror="false" />
		<delete dir="." includes="report-*.xml" />
	</target>
</project>
